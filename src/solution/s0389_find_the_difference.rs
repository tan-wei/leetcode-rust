/**
 * [0389] Find the Difference
 *
 * You are given two strings s and t.
 * String t is generated by random shuffling string s and then add one more letter at a random position.
 * Return the letter that was added to t.
 *  
 * Example 1:
 *
 * Input: s = "abcd", t = "abcde"
 * Output: "e"
 * Explanation: 'e' is the letter that was added.
 *
 * Example 2:
 *
 * Input: s = "", t = "y"
 * Output: "y"
 *
 * Example 3:
 *
 * Input: s = "a", t = "aa"
 * Output: "a"
 *
 * Example 4:
 *
 * Input: s = "ae", t = "aea"
 * Output: "a"
 *
 *  
 * Constraints:
 *
 * 	0 <= s.length <= 1000
 * 	t.length == s.length + 1
 * 	s and t consist of lower-case English letters.
 *
 */
pub struct Solution {}

// problem: https://leetcode.com/problems/find-the-difference/
// discuss: https://leetcode.com/problems/find-the-difference/discuss/?currentPage=1&orderBy=most_votes&query=

// submission codes start here

impl Solution {
    pub fn find_the_difference(s: String, t: String) -> char {
        s.as_bytes()
            .iter()
            .chain(t.as_bytes())
            .fold(0, |acc, &x| acc ^ x) as char
    }
}

// submission codes end

#[cfg(test)]
mod tests {
    use super::*;

    #[test]
    fn test_0389_example_1() {
        let s = "abcd".to_string();
        let t = "abcde".to_string();
        let result = 'e';

        assert_eq!(Solution::find_the_difference(s, t), result);
    }

    #[test]
    fn test_0389_example_2() {
        let s = "".to_string();
        let t = "y".to_string();
        let result = 'y';

        assert_eq!(Solution::find_the_difference(s, t), result);
    }

    #[test]
    fn test_0389_example_3() {
        let s = "a".to_string();
        let t = "aa".to_string();
        let result = 'a';

        assert_eq!(Solution::find_the_difference(s, t), result);
    }

    #[test]
    fn test_0389_example_4() {
        let s = "ae".to_string();
        let t = "aea".to_string();
        let result = 'a';

        assert_eq!(Solution::find_the_difference(s, t), result);
    }
}
